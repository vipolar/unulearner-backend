spring.datasource.url=jdbc:postgresql://${BE_DATABASE_URL}:${BE_DATABASE_PORT}/${BE_DATABASE_NAME}
spring.datasource.username=${BE_DATABASE_USER}
spring.datasource.password=${BE_DATABASE_PASS}
server.servlet.context-path=${BE_CPATH}
spring.jpa.show-sql=${BE_JPA_SHOW_SQL}
server.port=${BE_PORT}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=${BE_JPA_HIBERNATE_MODE}

spring.security.oauth2.client.provider.keycloak.issuer-uri=${AU_SCHEMA}://${AU_DOMAIN}/${AU_CPATH}/realms/${AU_REALM}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${AU_SCHEMA}://${AU_DOMAIN}/${AU_CPATH}/realms/${AU_REALM}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.keycloak.client-id=${AU_CLIENT}
spring.security.oauth2.client.registration.keycloak.scope=openid
